{"version":3,"sources":["assets/theme.js","containers/Footer.jsx","containers/Header.jsx","state/index.js","components/ResultCard.jsx","components/TabContainer.jsx","components/Results.jsx","components/Search.jsx","utils/toSentenceCase.js","utils/hasMoreThanOne.js","components/Select.jsx","components/About.jsx","components/Snackbar.jsx","components/AddToHomeScreen.jsx","components/ResponsiveMenuItem.jsx","containers/Main.jsx","containers/Nav.jsx","App.jsx","serviceWorkerRegistration.js","index.js"],"names":["theme","createTheme","palette","type","primary","orange","typography","fontFamily","join","button","textTransform","shape","borderRadius","overrides","MuiSelect","icon","top","select","textAlign","Footer","Typography","color","className","rel","href","target","Header","variant","component","initialState","selectedBook","selectedDivision","selectedPage","multipleEditionResults","navTab","inputText","isError","errorMessage","showSnackbar","deferredInstallPrompt","useStore","create","set","setNavTab","state","selectBook","selectDivision","selectPage","handleInputChange","resetInputValues","setSearchResults","setMultipleEditionSearchResults","setError","clearInput","toggleSnackbar","setDeferredInstallPrompt","ResultCard","props","data","suttaId","ptsRef","bookId","match","translator","includes","referral","window","location","origin","split","Card","elevation","CardHeader","title","toUpperCase","Tooltip","placement","text","onCopy","fontSize","subheader","CardActions","Button","TabContainer","children","index","value","id","hidden","Results","book","division","page","finalResult","get","ptsData","flat","length","map","res","Search","onSubmit","e","preventDefault","input","trim","replace","toLowerCase","s","Object","keys","some","eachBook","indexes","array","what","i","push","hasMoreThanOne","key","indexesData","values","bothResults","ed","every","elem","child","results","filter","result","isArray","FormControl","size","error","Boolean","InputLabel","htmlFor","classes","shrink","FilledInput","placeholder","onChange","inputProps","autoComplete","autoCorrect","autoCapitalize","spellCheck","endAdornment","InputAdornment","position","IconButton","onClick","disabled","FormHelperText","Select","mobile","useMediaQuery","breakpoints","only","native","name","sort","k","entries","About","totalBooks","src","alt","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","event","reason","ContentProps","message","AddToHomeScreen","a","prompt","userChoice","outcome","addEventListener","Collapse","in","Alert","severity","action","AlertTitle","ResponsiveMenuItem","forwardRef","ref","other","Hidden","smUp","MenuItem","Main","tabValue","onChangeIndex","paragraph","Nav","AppBar","Tabs","indicatorColor","textColor","centered","Tab","label","App","ThemeProvider","CssBaseline","isLocalhost","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","render","document","getElementById","URL","process","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6af63d56.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\nimport orange from '@material-ui/core/colors/orange';\n\nexport const theme = createTheme({\n  palette: {\n    type: 'dark',\n    primary: orange,\n  },\n  typography: {\n    fontFamily: ['Inter', 'sans-serif'].join(','),\n    button: {\n      textTransform: 'none',\n    },\n  },\n  shape: {\n    borderRadius: 16,\n  },\n  overrides: {\n    MuiSelect: {\n      icon: {\n        top: 'calc(50% - 0.8rem)',\n      },\n      select: {\n        textAlign: 'left',\n      },\n    },\n  },\n});\n","import Typography from '@material-ui/core/Typography';\n\nexport default function Footer() {\n  return (\n    <footer>\n      <Typography color=\"textSecondary\">\n        <a\n          className=\"footerLink\"\n          rel=\"license noopener noreferrer\"\n          href=\"http://creativecommons.org/publicdomain/zero/1.0/\"\n          target=\"_blank\"\n        >\n          CC0\n        </a>{' '}\n        <a\n          className=\"footerLink\"\n          href=\"https://github.com/benmneb\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          benmneb\n        </a>\n      </Typography>\n    </footer>\n  );\n}\n","import Typography from '@material-ui/core/Typography';\n\nexport default function Header() {\n  return (\n    <header>\n      <Typography variant=\"h4\" component=\"h1\">\n        Convert PTS Reference to Sutta Number\n      </Typography>\n    </header>\n  );\n}\n","import create from 'zustand';\n\nconst initialState = {\n  selectedBook: '',\n  selectedDivision: '',\n  selectedPage: '',\n  multipleEditionResults: null,\n  navTab: 0,\n  inputText: '',\n  isError: false,\n  errorMessage: null,\n  showSnackbar: false,\n  deferredInstallPrompt: null,\n};\n\nexport const useStore = create((set) => ({\n  ...initialState,\n\n  setNavTab: (navTab) =>\n    set((state) => ({\n      ...state,\n      navTab,\n      selectedBook: initialState.selectedBook,\n      selectedDivision: initialState.selectedDivision,\n      selectedPage: initialState.selectedPage,\n      multipleEditionResults: initialState.multipleEditionResults,\n      inputText: initialState.inputText,\n    })),\n\n  selectBook: (selectedBook) =>\n    set((state) => ({\n      ...state,\n      selectedBook,\n      selectedDivision: initialState.selectedDivision,\n      selectedPage: initialState.selectedPage,\n    })),\n\n  selectDivision: (selectedDivision) =>\n    set((state) => ({\n      ...state,\n      selectedDivision,\n      selectedPage: initialState.selectedPage,\n    })),\n\n  selectPage: (selectedPage) =>\n    set((state) => ({\n      ...state,\n      selectedPage,\n      inputText: initialState.inputText,\n      multipleEditionResults: initialState.multipleEditionResults,\n    })),\n\n  handleInputChange: (inputText) =>\n    set((state) => ({\n      ...state,\n      inputText,\n      isError: false,\n    })),\n\n  resetInputValues: () =>\n    set((state) => ({\n      ...state,\n      selectedBook: initialState.selectedBook,\n      selectedDivision: initialState.selectedDivision,\n      selectedPage: initialState.selectedPage,\n      multipleEditionResults: initialState.multipleEditionResults,\n    })),\n\n  setSearchResults: (selectedBook, selectedDivision, selectedPage, inputText) =>\n    set((state) => ({\n      ...state,\n      selectedBook,\n      selectedDivision,\n      selectedPage,\n      inputText,\n      isError: false,\n      multipleEditionResults: initialState.multipleEditionResults,\n    })),\n\n  setMultipleEditionSearchResults: (multipleEditionResults, inputText) =>\n    set((state) => ({\n      ...state,\n      multipleEditionResults,\n      inputText,\n      isError: false,\n    })),\n\n  setError: (errorMessage) =>\n    set((state) => ({\n      ...state,\n      isError: true,\n      errorMessage,\n    })),\n\n  clearInput: () =>\n    set((state) => ({\n      ...state,\n      isError: false,\n      inputText: initialState.inputText,\n      selectedBook: initialState.selectedBook,\n      selectedDivision: initialState.selectedDivision,\n      selectedPage: initialState.selectedPage,\n      multipleEditionResults: initialState.multipleEditionResults,\n    })),\n\n  toggleSnackbar: () =>\n    set((state) => ({\n      ...state,\n      showSnackbar: !state.showSnackbar,\n    })),\n\n  setDeferredInstallPrompt: (deferredInstallPrompt) =>\n    set((state) => ({\n      ...state,\n      deferredInstallPrompt,\n    })),\n}));\n","import Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport OpenInNewRoundedIcon from '@material-ui/icons/OpenInNewRounded';\n\nimport { useStore } from '../state';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport '../assets/styles.css';\n\nexport default function ResultCard(props) {\n  const { data } = props;\n\n  const toggleSnackbar = useStore((state) => state.toggleSnackbar);\n\n  const [suttaId, ptsRef] = data;\n\n  const bookId = suttaId.match(/[^0-9]+/gi)[0];\n  const translator = ['vb'].includes(bookId)\n    ? 'thittila'\n    : ['tha-ap', 'thi-ap'].includes(bookId)\n    ? 'walters'\n    : ['dt', 'ya'].includes(bookId)\n    ? 'unarada'\n    : 'sujato';\n  const referral = window.location.origin.split('://')[1];\n\n  const englishTranslations = [\n    'mn',\n    'sn',\n    'an',\n    'dn',\n    'dhp',\n    'iti',\n    'snp',\n    'vb',\n    'thag',\n    'thig',\n    'ud',\n    'thi-ap',\n    'tha-ap',\n    'dt',\n    'ya',\n  ];\n\n  return (\n    <>\n      <Card elevation={0} className=\"resultCard\">\n        <CardHeader\n          className=\"resultCardHeader\"\n          title={\n            <div className=\"resultCardHeaderTitle\">\n              {suttaId.toUpperCase()}\n              <Tooltip\n                title=\"Copy sutta reference\"\n                placement=\"right\"\n                className=\"cursorCopy\"\n              >\n                <CopyToClipboard\n                  text={suttaId.toUpperCase()}\n                  onCopy={() => toggleSnackbar()}\n                >\n                  <FileCopyOutlinedIcon color=\"disabled\" fontSize=\"small\" />\n                </CopyToClipboard>\n              </Tooltip>\n            </div>\n          }\n          subheader=\"Read this sutta:\"\n        />\n        <CardActions className=\"resultCardActions\">\n          <Button\n            variant=\"outlined\"\n            href={`https://suttacentral.net/${suttaId}/pli/ms#${ptsRef}?ref=${referral}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Pali\n            <OpenInNewRoundedIcon className=\"buttonIcon\" fontSize=\"inherit\" />\n          </Button>\n          {bookId && englishTranslations.includes(bookId) && (\n            <Button\n              variant=\"outlined\"\n              href={`https://suttacentral.net/${suttaId}/en/${translator}#${ptsRef}?ref=${referral}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              English\n              <OpenInNewRoundedIcon className=\"buttonIcon\" fontSize=\"inherit\" />\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n    </>\n  );\n}\n","export default function TabContainer(props) {\n  const { children, index, value } = props;\n\n  return (\n    <section\n      id={`tabcontainer-${index}`}\n      hidden={value !== index}\n      className=\"tabContainer\"\n    >\n      {value === index && children}\n    </section>\n  );\n}\n","import { get } from 'lodash';\n\nimport { useStore } from '../state';\nimport ptsData from '../data/pts_lookup.json';\nimport { ResultCard } from '../components';\n\nexport default function Results() {\n  const book = useStore((state) => state.selectedBook);\n  const division = useStore((state) => state.selectedDivision);\n  const page = useStore((state) => state.selectedPage);\n  const multipleEditionResults = useStore(\n    (state) => state.multipleEditionResults\n  );\n\n  const finalResult = multipleEditionResults\n    ? multipleEditionResults\n    : get(ptsData, `${book}.${division}.${page}`, null) ||\n      get(ptsData, `${book}.${page}`, null);\n\n  if (finalResult === null) {\n    return null;\n  }\n\n  return finalResult.flat().length > 2 ? (\n    <div className=\"multiResultCardContainer\">\n      {finalResult.map((res) => (\n        <ResultCard key={res} data={res} />\n      ))}\n    </div>\n  ) : (\n    <ResultCard data={finalResult.flat()} />\n  );\n}\n","import InputAdornment from '@material-ui/core/InputAdornment';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\n\nimport { get, isArray } from 'lodash';\n\nimport { useStore } from '../state';\n\nimport ptsData from '../data/pts_lookup.json';\nimport { hasMoreThanOne, toSentenceCase } from '../utils';\nimport '../assets/styles.css';\n\nexport default function Search() {\n  const inputText = useStore((state) => state.inputText);\n  const isError = useStore((state) => state.isError);\n  const errorMessage = useStore((state) => state.errorMessage);\n\n  const setError = useStore((state) => state.setError);\n  const resetInputValues = useStore((state) => state.resetInputValues);\n  const clearInput = useStore((state) => state.clearInput);\n  const setMultipleEditionSearchResults = useStore(\n    (state) => state.setMultipleEditionSearchResults\n  );\n  const setSearchResults = useStore((state) => state.setSearchResults);\n  const handleInputChange = useStore((state) => state.handleInputChange);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const input = inputText.trim().replace(/[.+]/g, ' ').split(/\\s+/);\n    const book = toSentenceCase(input[0]);\n    const division = input[1] && input[1].toLowerCase(); // this refers to page number for books that have no division\n    const page = input[2];\n\n    // if book has multiple editions\n    if (\n      Object.keys(ptsData).some((eachBook) => eachBook.includes(`${book} `))\n    ) {\n      // get indexes of all book editions\n      const indexes = hasMoreThanOne(\n        Object.keys(ptsData).map((key) => key.split(/\\s+/)[0]),\n        book\n      );\n      // return data from those indexes in ptsData and put in new object\n      const indexesData = {\n        ...indexes.map((index) => Object.values(ptsData)[index]),\n      };\n      // get the required info from this new object instead of whole ptsData\n      const bothResults = Object.keys(indexesData).map(\n        (ed) =>\n          get(indexesData, `${ed}.${division}.${page}`, null) ||\n          get(indexesData, `${ed}.${division}`, null)\n      );\n\n      // if bothResults array is full of nulls\n      if (bothResults.every((elem) => elem === null)) {\n        // check if has no divisions. '20' is just a number, if lots of children then it probably has no divisions, because the children are the page results\n        if (Object.values(indexesData).every((child) => child.length > 20)) {\n          setError('Please enter a valid page number');\n          return resetInputValues();\n        }\n\n        // must have divisions\n        setError('Please enter a valid book division');\n        return resetInputValues();\n      }\n\n      // filter out null results (so when only one edition has the searched page)\n      const results = bothResults.filter(\n        (result) => result !== null && result.length <= 2\n      );\n\n      // handle (what is probably a) page number error\n      if (!results.length) {\n        setError('Please enter a valid page number');\n        return resetInputValues();\n      }\n\n      // else all is good!\n      return setMultipleEditionSearchResults(results, input.join(' '));\n    }\n\n    // has only one edition\n\n    // check if book has no divisions\n    if (isArray(ptsData[book]) && typeof ptsData[book] !== 'undefined') {\n      // page number reference is out of range (the const 'division' refers to page number for books that have no division)\n      if (!ptsData[book][division]) {\n        setError('Please enter a valid page number');\n        return resetInputValues();\n      }\n\n      // else all is good!\n      return setSearchResults(book, '', division, input.join(' '));\n    }\n\n    // book has divisions\n\n    // book reference is incorrect\n    if (!ptsData[book]) {\n      setError('Please enter a valid book reference');\n      return resetInputValues();\n    }\n\n    // division reference is incorrect\n    if (!ptsData[book][division]) {\n      setError('Please enter a valid book division');\n      return resetInputValues();\n    }\n\n    // number reference is incorrect\n    if (!ptsData[book][division][page]) {\n      setError('Please enter a valid page number');\n      return resetInputValues();\n    }\n\n    // else all is good!\n    return setSearchResults(book, division, page, input.join(' '));\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <FormControl\n        size=\"medium\"\n        variant=\"filled\"\n        error={isError && Boolean(inputText.length)}\n        className=\"searchFormControl\"\n      >\n        <InputLabel htmlFor=\"search\" classes={{ shrink: 'inputShrink' }}>\n          Search\n        </InputLabel>\n        <FilledInput\n          id=\"search\"\n          placeholder=\"ie. D ii 14\"\n          value={inputText}\n          onChange={(e) => handleInputChange(e.target.value)}\n          aria-describedby=\"search-text\"\n          inputProps={{\n            autoComplete: 'off',\n            autoCorrect: 'off',\n            autoCapitalize: 'off',\n            spellCheck: 'false',\n          }}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear search input\"\n                onClick={() => clearInput()}\n                disabled={inputText === ''}\n              >\n                <CloseRoundedIcon fontSize=\"small\" />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n        <FormHelperText id=\"search-text\">\n          {isError && inputText ? errorMessage : ' '}\n        </FormHelperText>\n      </FormControl>\n      <div className=\"submitBox\">\n        <Button type=\"submit\" disabled={inputText === ''}>\n          Convert\n        </Button>\n      </div>\n    </form>\n  );\n}\n","export function toSentenceCase(str) {\n  return str\n    .toLowerCase()\n    .replace(/\\s+([a-z])|^[a-z]/g, (s) => s.toUpperCase());\n}\n","export function hasMoreThanOne(array, what) {\n  let indexes = [];\n  for (let i = 0; i < array.length; i++) {\n    if (array[i] === what) {\n      indexes.push(i);\n    }\n  }\n  return indexes;\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport MuiSelect from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport { get, isArray } from 'lodash';\n\nimport { useStore } from '../state';\nimport ptsData from '../data/pts_lookup.json';\nimport { ResponsiveMenuItem } from '.';\n\nexport default function Select() {\n  const book = useStore((state) => state.selectedBook);\n  const division = useStore((state) => state.selectedDivision);\n  const page = useStore((state) => state.selectedPage);\n\n  const selectBook = useStore((state) => state.selectBook);\n  const selectDivision = useStore((state) => state.selectDivision);\n  const selectPage = useStore((state) => state.selectPage);\n\n  const mobile = useMediaQuery((theme) => theme.breakpoints.only('xs'));\n\n  return (\n    <div className=\"selection\">\n      <FormControl>\n        <InputLabel>Book</InputLabel>\n        <MuiSelect\n          native={mobile}\n          name=\"selectedBook\"\n          value={book}\n          onChange={(e) => selectBook(e.target.value)}\n        >\n          <ResponsiveMenuItem value=\"\" aria-label=\"none\">\n            {!mobile ? <em>None</em> : null}\n          </ResponsiveMenuItem>\n          {Object.keys(ptsData)\n            .sort()\n            .map((k) => (\n              <ResponsiveMenuItem value={k} key={k}>\n                {k}\n              </ResponsiveMenuItem>\n            ))}\n        </MuiSelect>\n      </FormControl>\n      <FormControl>\n        <InputLabel>Division</InputLabel>\n        <MuiSelect\n          native={mobile}\n          name=\"selectedDiv\"\n          value={division}\n          onChange={(e) => selectDivision(e.target.value)}\n          disabled={!book || isArray(ptsData[book])}\n        >\n          <ResponsiveMenuItem value=\"\" aria-label=\"none\">\n            {!mobile ? <em>None</em> : null}\n          </ResponsiveMenuItem>\n          {!isArray(ptsData[book]) && typeof ptsData[book] !== 'undefined'\n            ? Object.keys(ptsData[book]).map((k) => (\n                <ResponsiveMenuItem value={k} key={k}>\n                  {k}\n                </ResponsiveMenuItem>\n              ))\n            : null}\n        </MuiSelect>\n      </FormControl>\n      <FormControl>\n        <InputLabel>Page</InputLabel>\n        <MuiSelect\n          native={mobile}\n          name=\"selectedNum\"\n          value={page}\n          onChange={(e) => selectPage(e.target.value)}\n          disabled={\n            !isArray(ptsData[book]) &&\n            !isArray(get(ptsData, `${book}.${division}`, null))\n          }\n        >\n          <ResponsiveMenuItem value=\"\" aria-label=\"none\">\n            {!mobile ? <em>None</em> : null}\n          </ResponsiveMenuItem>\n          {isArray(get(ptsData, `${book}.${division}`, null))\n            ? Object.entries(get(ptsData, `${book}.${division}`, null))\n                .filter(([k, v]) => v !== null)\n                .map(([k, v]) => (\n                  <ResponsiveMenuItem value={k} key={k}>\n                    {k}\n                  </ResponsiveMenuItem>\n                ))\n            : isArray(ptsData[book])\n            ? Object.entries(get(ptsData, `${book}`, null))\n                .filter(([k, v]) => v !== null)\n                .map(([k, v]) => (\n                  <ResponsiveMenuItem value={k} key={k}>\n                    {k}\n                  </ResponsiveMenuItem>\n                ))\n            : null}\n        </MuiSelect>\n      </FormControl>\n    </div>\n  );\n}\n","import Typography from '@material-ui/core/Typography';\n\nimport ptsData from '../data/pts_lookup.json';\n\nexport default function About() {\n  const totalBooks = Object.keys(ptsData).length;\n\n  return (\n    <Typography component=\"article\">\n      <section>\n        <p>\n          The search tab is a case-insensitive PTS lookup that references{' '}\n          {totalBooks} different books. It is perfect for copy and pasting or\n          quickly typing Pali Text Society references and reading the sutta\n          online.\n        </p>\n        <p>\n          The search input accepts two or three whitespace/period seperated\n          values in the format of PTS references (book, division?, page), eg.{' '}\n          <code>M i 5</code>, <code>Dhp 34</code>, <code>Bv i. 16</code>,{' '}\n          <code>it.80</code>, <code>S.I.42</code>.\n        </p>\n        <p>\n          You don't need to specify a book edition number, by default the search\n          will return all available editions.\n        </p>\n        <p>\n          If multiple results appear, it's because the reference you searched\n          for applied to multiple book editions. The earliest edition's\n          reference is always displayed first.\n        </p>\n        <p>\n          The select tab allows for manual entering of book reference, division\n          and page number.\n        </p>\n        <p>\n          For comments and corrections, please{' '}\n          <a\n            href=\"https://github.com/benmneb/pts-converter\"\n            className=\"link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            file an issue or make a pull request on GitHub\n          </a>\n          .\n        </p>\n      </section>\n      <hr />\n      <section>\n        <p>\n          This project started out as an internal utility function to\n          automatically convert the PTS references in my project{' '}\n          <a\n            href=\"https://github.com/benmneb/meditation-subjects\"\n            className=\"link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            The 40 Buddhist Meditation Subjects\n          </a>{' '}\n          which is a prettified version of the practical instructions from the\n          Visuddhimagga.\n        </p>\n        <p>\n          This PTS reference converter was built on top of the great open source\n          work done by{' '}\n          <a\n            href=\"https://gitlab.com/olastor/pts-converter/\"\n            className=\"link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            olaster\n          </a>\n          , which was built on top of the priceless open source work going on at{' '}\n          <a\n            href=\"https://suttacentral.net\"\n            className=\"link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Sutta Central\n          </a>\n          .\n        </p>\n      </section>\n      <hr />\n      <section>\n        <p>\n          This work is dedicated to the public domain via{' '}\n          <a\n            className=\"link\"\n            rel=\"license noopener noreferrer\"\n            href=\"http://creativecommons.org/publicdomain/zero/1.0/\"\n            target=\"_blank\"\n          >\n            Creative Commons Zero (CC0)\n          </a>\n          . You are free to copy or modify it as you see fit. Attribution is\n          appreciated but not legally required.\n        </p>\n        <a\n          rel=\"license noopener noreferrer\"\n          href=\"http://creativecommons.org/publicdomain/zero/1.0/\"\n          target=\"_blank\"\n        >\n          <img\n            src=\"https://licensebuttons.net/p/zero/1.0/88x31.png\"\n            alt=\"CC0\"\n          />\n        </a>\n      </section>\n    </Typography>\n  );\n}\n","import MuiSnackbar from '@material-ui/core/Snackbar';\n\nimport { useStore } from '../state';\nimport '../assets/styles.css';\n\nexport default function Snackbar() {\n  const showSnackbar = useStore((state) => state.showSnackbar);\n\n  const toggleSnackbar = useStore((state) => state.toggleSnackbar);\n\n  function handleClose(event, reason) {\n    if (reason !== 'clickaway') {\n      toggleSnackbar();\n    }\n  }\n\n  return (\n    <MuiSnackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={showSnackbar}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id',\n      }}\n      message={<span id=\"message-id\">Sutta reference copied to clipboard</span>}\n    />\n  );\n}\n","import Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport AddToHomeScreenRoundedIcon from '@material-ui/icons/AddToHomeScreenRounded';\n\nimport { useStore } from '../state';\nimport '../assets/styles.css';\n\nexport default function AddToHomeScreen() {\n  const deferredInstallPrompt = useStore(\n    (state) => state.deferredInstallPrompt\n  );\n\n  const setDeferredInstallPrompt = useStore(\n    (state) => state.setDeferredInstallPrompt\n  );\n\n  // check if is installable on device\n  window.addEventListener('beforeinstallprompt', (e) => {\n    e.preventDefault();\n    setDeferredInstallPrompt(e);\n  });\n\n  // check if user has installed already\n  window.addEventListener('appinstalled', () => {\n    setDeferredInstallPrompt(null);\n  });\n\n  async function handleInstallClick() {\n    deferredInstallPrompt.prompt();\n\n    const choiceResult = await deferredInstallPrompt.userChoice;\n\n    if (choiceResult.outcome === 'accepted') {\n      setDeferredInstallPrompt(null);\n    }\n  }\n\n  return (\n    <Collapse\n      in={Boolean(deferredInstallPrompt)}\n      component=\"aside\"\n      className=\"addToHomeScreen\"\n    >\n      <Alert\n        variant=\"filled\"\n        severity=\"info\"\n        classes={{\n          icon: 'addToHomeScreenIcon',\n          message: 'addToHomeScreenMessage',\n        }}\n        icon={<AddToHomeScreenRoundedIcon />}\n        action={[\n          <IconButton\n            key=\"1\"\n            aria-label=\"add to home screen\"\n            color=\"inherit\"\n            onClick={handleInstallClick}\n          >\n            <CheckRoundedIcon fontSize=\"inherit\" />\n          </IconButton>,\n          <IconButton\n            key=\"2\"\n            aria-label=\"don't add to home screen\"\n            color=\"inherit\"\n            onClick={() => {\n              setDeferredInstallPrompt(null);\n            }}\n          >\n            <CloseRoundedIcon fontSize=\"inherit\" />\n          </IconButton>,\n        ]}\n      >\n        <AlertTitle>Install this app to use it offline</AlertTitle>\n      </Alert>\n    </Collapse>\n  );\n}\n","import { forwardRef } from 'react';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst ResponsiveMenuItem = forwardRef((props, ref) => {\n  const { children, ...other } = props;\n\n  return (\n    <>\n      <Hidden smUp>\n        <option ref={ref} {...other}>\n          {children}\n        </option>\n      </Hidden>\n      <Hidden only=\"xs\">\n        <MenuItem ref={ref} {...other}>\n          {children}\n        </MenuItem>\n      </Hidden>\n    </>\n  );\n});\n\nexport default ResponsiveMenuItem;\n","import Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport { useStore } from '../state';\nimport { TabContainer, Results, Search, Select, About } from '../components';\n\nexport default function Main() {\n  const tabValue = useStore((state) => state.navTab);\n\n  const setNavTab = useStore((state) => state.setNavTab);\n\n  return (\n    <Card className=\"tabsWrapper\" component=\"main\">\n      <SwipeableViews\n        index={tabValue}\n        onChangeIndex={(value) => setNavTab(value)}\n      >\n        <TabContainer index={0} value={tabValue}>\n          <Typography paragraph component=\"h2\">\n            Please type or copy & paste the PTS reference you want to convert.\n          </Typography>\n          <Search />\n          <Results />\n        </TabContainer>\n        <TabContainer index={1} value={tabValue}>\n          <Typography paragraph component=\"h2\">\n            Please select the PTS reference you want to convert.\n          </Typography>\n          <Select />\n          <Results />\n        </TabContainer>\n        <TabContainer index={2} value={tabValue}>\n          <About />\n        </TabContainer>\n      </SwipeableViews>\n    </Card>\n  );\n}\n","import AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { useStore } from '../state';\n\nexport default function Nav() {\n  const tabValue = useStore((state) => state.navTab);\n\n  const setNavTab = useStore((state) => state.setNavTab);\n\n  return (\n    <AppBar\n      position=\"static\"\n      color=\"default\"\n      className=\"appBar\"\n      component=\"nav\"\n    >\n      <Tabs\n        className=\"tabs\"\n        value={tabValue}\n        onChange={(e, value) => setNavTab(value)}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n        centered\n      >\n        <Tab label=\"Search\" />\n        <Tab label=\"Select\" />\n        <Tab label=\"About\" />\n      </Tabs>\n    </AppBar>\n  );\n}\n","import CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport { theme } from './assets';\nimport { Footer, Header, Nav, Main } from './containers';\nimport { AddToHomeScreen, Snackbar } from './components';\nimport './assets/styles.css';\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Nav />\n      <Main />\n      <AddToHomeScreen />\n      <Footer />\n      <Snackbar />\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { render } from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nrender(<App />, document.getElementById('root'));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}